@model ProductDataAccessLayerLib.tbl_product

@{
    ViewBag.Title = "AddProduct";
    var cid = new SelectList((List<string>)ViewData["cid"]);

}




@using (Html.BeginForm())
{
    
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>tbl_product</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        
        <div class="form-group">

            
                 @Html.LabelFor(model => model.cid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.cid, cid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.cid, "", new { @class = "text-danger" })
                </div>
            
        </div>
        @*<div class="form-group">

            @Html.LabelFor(model => model.pid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.pid, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pid, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.pname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pdescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pdescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pdescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Product" class="btn btn-default" />
            </div>
        </div>
        

    </div>
   
}
<h3 ><font color="Red">
@if (ViewData["Message"] != null)
{
    @ViewData["Message"].ToString()
}
</font>
</h3>

<h4>
    @Html.ActionLink("View Products", "ViewCategory")
</h4>

@*<script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@
